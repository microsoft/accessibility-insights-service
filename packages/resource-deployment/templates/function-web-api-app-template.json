{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "namePrefix": {
            "type": "string",
            "metadata": {
                "description": "The function app name prefix"
            }
        },
        "name": {
            "type": "string",
            "defaultValue": "[toLower(concat(parameters('namePrefix'), uniqueString(resourceGroup().id)))]",
            "metadata": {
                "description": "The function app name"
            }
        },
        "storageAccountName": {
            "type": "string",
            "defaultValue": "[concat('allystorage', toLower(uniqueString(resourceGroup().id)))]",
            "metadata": {
                "description": "The storage account resource name."
            }
        },
        "appInsightsName": {
            "type": "string",
            "defaultValue": "[concat('allyinsights', toLower(uniqueString(resourceGroup().id)))]",
            "metadata": {
                "description": "The app insights resource name."
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "The location in which the Azure function app and its resources should be deployed."
            }
        },
        "clientId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The web API identity client ID."
            }
        },
        "allowedApplications": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "An allowlist of string application client IDs representing the client resource that is calling into the app."
            }
        },
        "keyVaultName": {
            "type": "string",
            "defaultValue": "[concat('allyvault', toLower(uniqueString(resourceGroup().id)))]",
            "metadata": {
                "description": "The name of the key vault service."
            }
        },
        "releaseVersion": {
            "type": "string",
            "metadata": {
                "description": "The release version number."
            }
        }
    },
    "variables": {
        "appPlanName": "[toLower(concat('app-service-plan-', uniqueString(resourceGroup().id)))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2022-09-01",
            "name": "[variables('appPlanName')]",
            "sku": {
                "name": "Y1",
                "tier": "Dynamic"
            },
            "kind": "functionapp",
            "location": "[parameters('location')]",
            "properties": {}
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2022-09-01",
            "name": "[parameters('name')]",
            "location": "[parameters('location')]",
            "kind": "functionapp",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appPlanName'))]",
                "httpsOnly": true,
                "siteConfig": {
                    "minTlsVersion": "1.2",
                    "appSettings": [
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "node"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "WEBSITE_NODE_DEFAULT_VERSION",
                            "value": "~20"
                        },
                        {
                            "name": "AzureWebJobsStorage__accountName",
                            "value": "[parameters('storageAccountName')]"
                        },
                        {
                            "name": "WEBSITE_RUN_FROM_PACKAGE",
                            "value": "[format('https://{0}.blob.core.windows.net/function-apps/{1}.zip', parameters('storageAccountName'), parameters('name'))]"
                        },
                        {
                            "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                            "value": "[reference(concat('microsoft.insights/components/', parameters('appInsightsName')), '2015-05-01').InstrumentationKey]"
                        },
                        {
                            "name": "APPINSIGHTS_APPID",
                            "value": "[reference(concat('microsoft.insights/components/', parameters('appInsightsName')), '2015-05-01').AppId]"
                        },
                        {
                            "name": "AI_KEY_VAULT_URL",
                            "value": "[concat('https://', parameters('keyVaultName'), '.vault.azure.net/')]"
                        },
                        {
                            "name": "RELEASE_VERSION",
                            "value": "[parameters('releaseVersion')]"
                        }
                    ]
                }
            },
            "dependsOn": ["[resourceId('Microsoft.Web/serverfarms', variables('appPlanName'))]"],
            "resources": [
                {
                    "name": "[concat(parameters('name'), '/authsettingsV2')]",
                    "apiVersion": "2022-09-01",
                    "type": "Microsoft.Web/sites/config",
                    "location": "[parameters('location')]",
                    "dependsOn": ["[resourceId('Microsoft.Web/sites', parameters('name'))]"],
                    "properties": {
                        "platform": {
                            "enabled": true,
                            "runtimeVersion": "~1"
                        },
                        "globalValidation": {
                            "requireAuthentication": true,
                            "unauthenticatedClientAction": "RedirectToLoginPage",
                            "redirectToProvider": "azureActiveDirectory"
                        },
                        "identityProviders": {
                            "azureActiveDirectory": {
                                "enabled": true,
                                "registration": {
                                    "openIdIssuer": "[concat('https://sts.windows.net/', subscription().tenantId, '/v2.0')]",
                                    "clientId": "[parameters('clientId')]"
                                },
                                "login": {
                                    "disableWWWAuthenticate": true
                                },
                                "validation": {
                                    "defaultAuthorizationPolicy": {
                                        "allowedApplications": "[array(split(parameters('allowedApplications'), ','))]"
                                    }
                                }
                            }
                        },
                        "login": {
                            "tokenStore": {
                                "enabled": true
                            }
                        }
                    }
                }
            ]
        }
    ]
}
