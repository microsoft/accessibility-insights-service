# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License.
name: $(Build.SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

pool:
    vmImage: 'Ubuntu-16.04'
    demands: npm

steps:
    - task: NodeTool@0
      inputs:
          versionSpec: 10.x
      displayName: 'Use Node 10.x'

    - script: |
          yarn install --frozen-lockfile
      displayName: 'install dependencies'

    - script: |
          yarn format-check
      displayName: check code formatting

    - script: |
          yarn copyright-check
      displayName: check for copyright headers

    - script: |
          yarn clean
      displayName: clean

    - script: |
          # 1st '--' needed for yarn since, yarn won't pass the first argument if it is --; 2nd '--' lets lerna to pass on anything after this as args;
          yarn build -- -- --env.version=$(Build.BuildId)
      displayName: build

    - script: |
          yarn lint
      displayName: run linter

    - script: |
          export NODE_OPTIONS=--max_old_space_size=4096
          yarn test --ci --coverage
      displayName: run unit tests

    - task: PublishTestResults@2
      inputs:
          testResultsFiles: 'test-results/unit/junit.xml'
          searchFolder: '$(Build.SourcesDirectory)'
          testRunTitle: unit tests
      condition: always()
      displayName: publish unit test results

    - task: PublishCodeCoverageResults@1
      inputs:
          codeCoverageTool: Cobertura
          summaryFileLocation: '$(Build.SourcesDirectory)/test-results/unit/coverage/cobertura-coverage.xml'
      displayName: publish code coverage

    - task: CopyFiles@2
      inputs:
          SourceFolder: packages
          Contents: |
              job-manager/dist/**/*
              web-api-scan-job-manager/dist/**/*
              runner/dist/**/*
              web-api-scan-runner/dist/**/*
              scan-request-sender/dist/**/*
              web-api-scan-request-sender/dist/**/*
              resource-deployment/dist/**/*
              web-api/dist/**/*
              web-workers/dist/**/*
              functional-tests/dist/**/*
              health-client/dist/**/*
              !**/node_modules/**/*
              !**/.vscode/**/*
              !**/*.md
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
      displayName: 'Copy Files to staging directory'

    - task: PublishBuildArtifacts@1
      inputs:
          pathtoPublish: '$(Build.ArtifactStagingDirectory)'
          artifactName: drop
      displayName: 'Publish build artifacts'

    - task: ms.vss-governance-buildtask.governance-build-task-component-detection.ComponentGovernanceComponentDetection@0
      displayName: 'Component Detection'
      inputs:
          failOnAlert: true
      condition: in(variables['Build.Reason'], 'IndividualCI', 'BatchedCI')
